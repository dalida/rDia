geom_point() + facet_wrap(~mbtcp.modbus.reference_num) +
ggtitle("Modbus Data Values Over Time by Reference Number") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(size=10),
legend.position = "top", legend.title = element_text(size=7))
xypl
xyp <- ggplot(mergedSewDT, aes(resp.time.rel, d, color=mbtcp.modbus.reference_num)) +
geom_point() + facet_grid(~resp.func.code) + ggtitle("Modbus Data Value Over Time by Function Code") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(size=10),
legend.position = "top", legend.title = element_text(size=8))
xyp
xyp <- ggplot(mergedSewDT[resp.func.code=="4"], aes(resp.time.rel, d, color=mbtcp.modbus.reference_num)) +
geom_point() + ggtitle("Modbus Data Value Over Time For Function Code 4") +
theme(axis.text.x = element_text(angle=90), legend.position = "top",
legend.title = element_text(size=8) )
xyp
invisible(dev.off())
xyp <- ggplot(mergedSewDT[resp.func.code=="4"], aes(resp.time.rel, d, color=mbtcp.modbus.reference_num)) +
geom_point() + ggtitle("Modbus Data Value Over Time For Function Code 4") +
theme(axis.text.x = element_text(angle=90), legend.position = "top",
legend.title = element_text(size=8) )
xyp
xyp <- ggplot(mergedSewDT, aes(resp.time.rel, d, color=mbtcp.modbus.reference_num)) +
geom_point() + facet_grid(~resp.func.code) + ggtitle("Modbus Data Value Over Time by Function Code") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(size=10),
legend.position = "top", legend.title = element_text(size=8))
xyp
xyp <- ggplot(mergedSewDT, aes(resp.time.rel, d, color=mbtcp.modbus.reference_num)) +
geom_point() + facet_grid(~resp.func.code) + ggtitle("Modbus Data Value Over Time by Function Code") +
theme(axis.text.x = element_text(angle=90),
legend.position = "top", legend.title = element_text(size=9))
xyp
xypl <- ggplot(mergedSewDT, aes(x=frame.time_relative, y=d, color=resp.func.code)) +
geom_point() + facet_wrap(~mbtcp.modbus.reference_num) +
ggtitle("Modbus Data Values Over Time by Reference Number") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(size=10),
legend.position = "top", legend.title = element_text(size=7))
xypl
summary(mergedSewDT)
cloud(resp.time.rel ~ d + mbtcp.modbus.reference_num | resp.func.code, data = mergedSewDT[resp.func.code=="4"],
col.point = mergedDT$mbtcp.modbus.reference_num, pch= 19,
xlab = "d", ylab = "refNum", zlab = "resp.time.rel",
main="3D Scatterplot \nReference Number, Data Value Over Time for Function Code 4",
key = list(points = list(pch = 19, col = seq_along(levels(mergedDT$mbtcp.modbus.reference_num))),
text = list(levels(mergedDT$mbtcp.modbus.reference_num)), space = 'top',
columns = nlevels(mergedDT$mbtcp.modbus.reference_num)))
mergedSewDT[,.(count=.N, d.min=min(d), d.mean=mean(d, na.rm=T), d.max=max(d),
d.sd=sd(d, na.rm=T), min.resp.time.rel=min(resp.time.rel),
min.resp.time.rel= max(resp.time.rel)),
by =.(resp.func.code, mbtcp.modbus.reference_num)][
order(resp.func.code, mbtcp.modbus.reference_num)]
save.image()
mergedSewDT[,.(count=.N, d.min=min(d), d.mean=mean(d, na.rm=T), d.max=max(d),
d.sd=sd(d, na.rm=T), min.resp.time.rel=min(resp.time.rel),
min.resp.time.rel= max(resp.time.rel)),
by =.(resp.func.code, mbtcp.modbus.reference_num)][
order(resp.func.code, mbtcp.modbus.reference_num)]
ggplot(sewModbusDT, aes(x=frame.number)) + geom_line(aes(y=frame.time_relative, color="frame.time_relative"))+
geom_point(aes(y=mbtcp.len, color="mbtcp.len"))+
scale_colour_manual(name='', values=c('frame.time_relative'='olivedrab', 'mbtcp.len'='firebrick'), guide='legend') +
guides(colour = guide_legend(override.aes = list(linetype=c(1,0)
, shape=c(NA, 16))))
tail(sewModbusDT)
bc <- ggplot(scadaDT, aes(x=ip.dst)) + geom_bar(stat="bin", fill="#56B4E9", colour="black")
bc <- bc + ggtitle("Bar Chart of Packets by Destination") + ylab("Packet Count")
bc + theme(axis.text.x = element_text(angle=90))
bc <- ggplot(sewModbusDT, aes(x=ip.source)) + geom_bar(stat="bin", fill="#FF9999", colour="black")
bc <- bc + ggtitle("Bar Chart of Packets by Source") + ylab("Packet Count")
bc + theme(axis.text.x = element_text(angle=90))
rm(bc)
bc <- ggplot(sewModbusDT, aes(x=ip.src)) + geom_bar(stat="bin", fill="#FF9999", colour="black")
bc <- bc + ggtitle("Bar Chart of Packets by Source") + ylab("Packet Count")
bc + theme(axis.text.x = element_text(angle=90))
bc <- ggplot(sewModbusDT, aes(x=ip.dst)) + geom_bar(stat="bin", fill="#56B4E9", colour="black")
bc <- bc + ggtitle("Bar Chart of Packets by Destination") + ylab("Packet Count")
bc + theme(axis.text.x = element_text(angle=90))
rm(bc)
rm(bc)
boxLatLength <-
bwplot(~Length, data=sewModbusDT, as.table=TRUE,
scales="free", main="Boxplots of Packet Lengths",
xlab="bytes", layout=c(4,7))
print(boxLatLength, more=TRUE)
boxLatLength <-
bwplot(~mbtcp.len, data=sewModbusDT, as.table=TRUE,
scales="free", main="Boxplots of Packet Lengths",
xlab="bytes", layout=c(4,7))
print(boxLatLength, more=TRUE)
print(boxLatLength, more=TRUE)
ggplot(sewModbusDT,  aes(mbtcp.len)) + geom_boxplot(fill="darkseagreen3")
ggplot(sewModbusDT,  aes(y=mbtcp.len)) + geom_boxplot(fill="darkseagreen3")
ggplot(sewModbusDT,  aes(~mbtcp.len)) + geom_boxplot(fill="darkseagreen3")
ggplot(sewModbusDT,  aes(x=mbtcp.prot_id, y=mbtcp.len)) + geom_boxplot(fill="darkseagreen3")
ggplot(sewModbusDT,  aes(x=mbtcp.prot_id, y=mbtcp.len)) + geom_boxplot(fill="darkseagreen4")
ggplot(sewModbusDT,  aes(x=mbtcp.prot_id, y=mbtcp.len)) + geom_boxplot()
ggplot(sewModbusDT,  aes(x=factor(0), y=mbtcp.len)) + geom_boxplot() +
xlab="" + scale_x_discrete(breaks = NULL) + coord_flip()
ggplot(sewModbusDT,  aes(x=factor(0), y=mbtcp.len)) + geom_boxplot() +
xlab=("") + scale_x_discrete(breaks = NULL) + coord_flip()
ggplot(sewModbusDT,  aes(x=factor(0), y=mbtcp.len)) + geom_boxplot() +
xlab=("")
ggplot(sewModbusDT,  aes(x=factor(0), y=mbtcp.len)) + geom_boxplot()
ggplot(sewModbusDT,  aes(x=factor(0), y=mbtcp.len)) + geom_boxplot() +
xlab=("")
ggplot(sewModbusDT,  aes(x=factor(0), y=mbtcp.len)) + geom_boxplot() +
xlab("") + scale_x_discrete(breaks = NULL) + coord_flip()
ggplot(sewModbusDT,  aes(x=factor(0), y=mbtcp.len)) + geom_violin() +
xlab("") + scale_x_discrete(breaks = NULL) + coord_flip()
View(mergedSewDT)
View(mergedSewDT)
mergedSewDT$ip.src <- factor(mergedSewDT$ip.src)
mergedSewDT$ip.dst <- factor(mergedSewDT$ip.dst)
mergedSewDT$tcp.srcport <- factor(mergedSewDT$tcp.srcport)
mergedSewDT$tcp.dstport <- factor(mergedSewDT$tcp.dstport)
mergedSewDT$prot_id <- factor(mergedSewDT$prot_id)
mergedSewDT$resp.src <- factor(mergedSewDT$resp.src)
mergedSewDT$resp.dest <- factor(mergedSewDT$resp.dest)
mergedSewDT$resp.srcport <- factor(mergedSewDT$resp.srcport)
mergedSewDT$resp.dstport <- factor(mergedSewDT$resp.dstport)
mergedSewDT$resp.prot_id <- factor(mergedSewDT$resp.prot_id)
mergedSewDT$resp.data <- factor(mergedSewDT$resp.data)
mergedSewDT$prot_id <- factor(mergedSewDT$mbtcp.prot_id)
mergedSewDT$prot_id <- NULL
mergedSewDT$mbtcp.prot_id <- factor(mergedSewDT$mbtcp.prot_id)
mergedSewDT$mbtcp.func_code<- factor(mergedSewDT$mbtcp.func_code)
mergedSewDT$mbtcp.func_code<- NULL
mergedSewDT$mbtcp.modbus.func_code<- factor(mergedSewDT$mbtcp.modbus.func_code)
nn <- mergedSewDT[,.(frame.time_delta_displayed, frame.len, ip.src, ip.dst,
mbtcp.prot_id, mbtcp.len, mbtcp.modbus.func_code,
mbtcp.modbus.reference_num, mbtcp.modbus.word_cnt,
resp.mbcp.len, resp.data
)]
nn <- mergedSewDT[,.(frame.time_delta_displayed, frame.len)]
nn <- mergedSewDT[,.(frame.time_delta_displayed, frame.len)]
nn <- mergedSewDT
head(nn)
nn <- mergedSewDT[, .(frame.time_relative)]
library(data.table)
nn <- mergedSewDT[,.(frame.time_delta_displayed, frame.len, ip.src, ip.dst,
mbtcp.prot_id, mbtcp.len, mbtcp.modbus.func_code,
mbtcp.modbus.reference_num, mbtcp.modbus.word_cnt,
resp.mbcp.len, resp.data
)]
head(nn)
nnData <- mergedSewDT[,.(frame.time_delta_displayed, frame.len, ip.src, ip.dst,
mbtcp.prot_id, mbtcp.len, mbtcp.modbus.func_code,
mbtcp.modbus.reference_num, mbtcp.modbus.word_cnt,
resp.mbcp.len, resp.data, anomoly=0
)]
head(nnData)
str(nnData)
nnData$anomoly<-NULL
nnData <- mergedSewDT[,.(frame.time_delta_displayed, frame.len, ip.src, ip.dst,
mbtcp.prot_id, mbtcp.len, mbtcp.modbus.func_code,
mbtcp.modbus.reference_num, mbtcp.modbus.word_cnt,
resp.mbcp.len, resp.data, anomaly=0
)]
head(nnData)
str(nnData)
nn <- neuralnet(
anomaly ~ frame.time_delta_displayed +
mbtcp.modbus.reference_num + mbtcp.modbus.word_cnt +
resp.mbcp.len + resp.data + data=nnData, hidden=1,
err.fct="ce", linear.output=FALSE)
nn <- neuralnet(
anomaly ~ frame.time_delta_displayed +
mbtcp.modbus.reference_num + mbtcp.modbus.word_cnt +
resp.mbcp.len + resp.data, data=nnData, hidden=1,
err.fct="ce", linear.output=FALSE)
library(neuralnet)
nn <- neuralnet(
anomaly ~ frame.time_delta_displayed +
mbtcp.modbus.reference_num + mbtcp.modbus.word_cnt +
resp.mbcp.len + resp.data, data=nnData, hidden=1,
err.fct="ce", linear.output=FALSE)
factor(mergedSewDT$mbtcp.modbus.reference_num)
levels(mergedSewDT$mbtcp.modbus.reference_num)
as.numeric(levels(mergedSewDT$mbtcp.modbus.reference_num))
as.numeric(factor(mergedSewDT$mbtcp.modbus.reference_num))
as.numeric(mergedSewDT$mbtcp.modbus.reference_num)
nnData <- mergedSewDT[,.(frame.time_delta_displayed, frame.len,
mbtcp.len, as.numeric(mbtcp.modbus.func_code),
as.numeric(mbtcp.modbus.reference_num), mbtcp.modbus.word_cnt,
resp.mbcp.len, as.numeric(resp.data), anomaly=0
)]
head(nnData)
nnData <- mergedSewDT[,.(frame.time_delta_displayed, frame.len,
mbtcp.len, mbtcp.modbus.func_code=as.numeric(mbtcp.modbus.func_code),
mbtcp.modbus.reference_num=as.numeric(mbtcp.modbus.reference_num),
mbtcp.modbus.word_cnt, resp.mbcp.len,
resp.data=as.numeric(resp.data), anomaly=0
)]
head(nnData)
str(nnData)
nn <- neuralnet(
anomaly ~ frame.time_delta_displayed +
mbtcp.modbus.reference_num + mbtcp.modbus.word_cnt +
resp.mbcp.len + resp.data, data=nnData, hidden=1,
err.fct="ce", linear.output=FALSE)
nn$result.matrix
plot(nn)
rm(nn)
nrow(nnData)
train <- nnData[1:10000,]
test  <- nnData[10001:nrow(nnData),]
nn <- neuralnet(
anomaly ~ frame.time_delta_displayed +
mbtcp.modbus.reference_num + mbtcp.modbus.word_cnt +
resp.mbcp.len + resp.data, data=train, hidden=1,
err.fct="ce", linear.output=FALSE)
nn$result.matrix
plot(nn)
plot(nn, rep = "best")
plot(nn, rep = "best")
?compute
table(sewModbusDT[,mbtcp.modbus.func_code])
table(sewModbusDT[,mbtcp.modbus.func_code, mbtcp.modbus.reference_num])
ggplot(sewModbusDT, aes(x=mbtcp.modbus.reference_num)) +
geom_bar(stat="bin", fill="#FF9999", colour="black") +
facet_grid(~mbtcp.modbus.func_code) +
ggtitle("Bar Chart of Reference Numbers by Function Code") +
ylab("Reference Number") + theme(axis.text.x = element_text(angle=90))
require(ggplot2)
require(ggplot2)
require(gplots)
?gplot
?ggplo
?ggplot
ggplot(sewModbusDT, aes(x=mbtcp.modbus.reference_num)) +
geom_bar(stat="bin", fill="#FF9999", colour="black") +
facet_grid(~mbtcp.modbus.func_code) +
ggtitle("Bar Chart of Reference Numbers by Function Code") +
ylab("Reference Number") + theme(axis.text.x = element_text(angle=90))
?scale_fill_brewer
ggplot(sewModbusDT, aes(x=mbtcp.modbus.reference_num)) +
geom_bar(stat="bin", fill="#FF9999", colour="black") +
facet_grid(~mbtcp.modbus.func_code) +
ggtitle("Bar Chart of Reference Numbers by Function Code") +
ylab("Reference Number") + theme(axis.text.x = element_text(angle=90)) +
scale_fill_brewer(palette="Spectral")
ggplot(sewModbusDT, aes(x=mbtcp.modbus.reference_num)) +
geom_bar(stat="bin", colour="black") +
facet_grid(~mbtcp.modbus.func_code) +
ggtitle("Bar Chart of Reference Numbers by Function Code") +
ylab("Reference Number") + theme(axis.text.x = element_text(angle=90)) +
scale_fill_brewer(palette="Spectral")
ggplot(sewModbusDT, aes(x=mbtcp.modbus.reference_num)) +
geom_bar(stat="bin") +
facet_grid(~mbtcp.modbus.func_code) +
ggtitle("Bar Chart of Reference Numbers by Function Code") +
ylab("Reference Number") + theme(axis.text.x = element_text(angle=90)) +
scale_fill_brewer(palette="Spectral")
ggplot(sewModbusDT, aes(x=mbtcp.modbus.reference_num, fill=mbtcp.modbus.reference_num)) +
geom_bar(stat="bin") +
facet_grid(~mbtcp.modbus.func_code) +
ggtitle("Bar Chart of Reference Numbers by Function Code") +
ylab("Reference Number") + theme(axis.text.x = element_text(angle=90)) +
scale_fill_brewer(palette="Spectral")
ggplot(sewModbusDT, aes(x=mbtcp.modbus.reference_num, fill=mbtcp.modbus.reference_num)) +
geom_bar(stat="bin") +
facet_grid(~mbtcp.modbus.func_code) +
ggtitle("Bar Chart of Reference Numbers by Function Code") +
ylab("Reference Number") + theme(axis.text.x = element_text(angle=90)) +
scale_fill_brewer(palette="Set2")
ggplot(sewModbusDT, aes(x=mbtcp.modbus.reference_num, fill=mbtcp.modbus.reference_num)) +
geom_bar(stat="bin") +
facet_grid(~mbtcp.modbus.func_code) +
ggtitle("Bar Chart of Reference Numbers by Function Code") +
ylab("Reference Number") + theme(axis.text.x = element_text(angle=90)) +
scale_fill_brewer(palette="Set3")
ggplot(sewModbusDT, aes(x=mbtcp.modbus.reference_num, fill=mbtcp.modbus.reference_num)) +
geom_bar(stat="bin") +
facet_grid(~mbtcp.modbus.func_code) +
ggtitle("Bar Chart of Reference Numbers by Function Code") +
ylab("Reference Number") + theme(axis.text.x = element_text(angle=90)) +
scale_fill_brewer(palette="Set1")
?cloud
?cor
?pairs
pairs(sewModbusDT[,.(mbtcp.len, mbtcp.len, mbtcp.modbus.func_code, mbtcp.modbus.reference_num)])
pairs(mergedSewDT[,.(mbtcp.len, mbtcp.modbus.func_code, mbtcp.modbus.reference_num, mbtcp, d)])
pairs(mergedSewDT[,.(mbtcp.len, mbtcp.modbus.func_code, mbtcp.modbus.reference_num, d)])
cor(mergedSewDT[,.(mbtcp.len, mbtcp.modbus.func_code, mbtcp.modbus.reference_num, d)], method="smearman")
cor(mergedSewDT[,.(mbtcp.len, mbtcp.modbus.func_code, mbtcp.modbus.reference_num, d)], method="spearman")
cor(mergedSewDT[,.(mbtcp.len, is.numeric(mbtcp.modbus.func_code), is.numeric(mbtcp.modbus.reference_num), d)], method="spearman")
cor(mergedSewDT[,.(mbtcp.len, d)], method="spearman")
cor(mergedSewDT[,.(mbtcp.len, is.numeric(mbtcp.modbus.func_code), d)], method="spearman")
cor(mergedSewDT[,.(mbtcp.len, as.numeric(mbtcp.modbus.func_code), d)], method="spearman")
cor(mergedSewDT[,.(mbtcp.len, as.numeric(mbtcp.modbus.func_code), as.numeric(mbtcp.modbus.reference_num), d)], method="spearman")
cor(mergedSewDT[,.(mbtcp.len, mbtcp.modbus.func_code=as.numeric(mbtcp.modbus.func_code), mbtcp.modbus.reference_num=as.numeric(mbtcp.modbus.reference_num), d)], method="spearman")
pairs(mergedSewDT[,.(mbtcp.len, mbtcp.modbus.func_code, mbtcp.modbus.reference_num, d)])
cor(mergedSewDT[,.(mbtcp.len, mbtcp.modbus.func_code=as.numeric(mbtcp.modbus.func_code), mbtcp.modbus.reference_num=as.numeric(mbtcp.modbus.reference_num), d)], method="spearman")
ggplot(mergedSewDT, aes(x = mbtcp.modbus.reference_num, y = d)) +
geom_boxplot(fill="lightpink4")
ggplot(mergedSewDT, aes(x = mbtcp.modbus.reference_num, y = d)) +
geom_boxplot(fill="lightpink4") +
facet_grid(~mbtcp.modbus.func_code) +
ggtitle("Boxplot of Modbus Data Values by Reference Number")
summary(mergedSewDT)
mergedSewDT[,.(count=.N, d.min=min(d), d.mean=mean(d, na.rm=T), d.max=max(d),
d.sd=sd(d, na.rm=T), min.resp.time.rel=min(resp.time.rel),
min.resp.time.rel= max(resp.time.rel)),
by =.(resp.func.code, mbtcp.modbus.reference_num)][
order(resp.func.code, mbtcp.modbus.reference_num)]
pairs(mergedSewDT[,.(mbtcp.len, mbtcp.modbus.func_code, mbtcp.modbus.reference_num, d)])
pairs(mergedSewDT[,.(mbtcp.len, as.numeric(mbtcp.modbus.func_code), as.numeric(mbtcp.modbus.reference_num), d)])
pairs(mergedSewDT[,.(mbtcp.len, as.numeric(mbtcp.modbus.func_code), as.numeric(mbtcp.modbus.reference_num), d)])
pairs(mergedSewDT[,.(mbtcp.len, mbtcp.modbus.func_code=as.numeric(mbtcp.modbus.func_code), mbtcp.modbus.reference_num=as.numeric(mbtcp.modbus.reference_num), d)])
pairs(mergedSewDT[,.(mbtcp.len, mbtcp.modbus.func_code=as.numeric(mbtcp.modbus.func_code), mbtcp.modbus.reference_num=as.numeric(mbtcp.modbus.reference_num), d)])
?split
<- nnData[1:10000,]
testing
<- nnData[1:10000,]
testing
training <- nnData[1:10000,]
testing  <- nnData[10001:nrow(nnData),]
training_model <- train(
anomaly ~ .,
data = training,
method = "neuralnet")
library(neuralnet)
install.packages("caret")
library(caret)
training_model <- train(
anomaly ~ .,
data = training,
method = "neuralnet")
?cloud
cloud(resp.time.rel ~ d + mbtcp.modbus.reference_num | resp.func.code, data = mergedSewDT[resp.func.code=="4"],
col.point = mergedDT$mbtcp.modbus.reference_num, pch= 19,
xlab = "d", ylab = "refNum", zlab = "resp.time.rel",
main="3D Scatterplot \nReference Number, Data Value Over Time for Function Code 4",
key = list(points = list(pch = 19, col = seq_along(levels(mergedDT$mbtcp.modbus.reference_num))),
text = list(levels(mergedDT$mbtcp.modbus.reference_num)), space = 'top',
columns = nlevels(mergedDT$mbtcp.modbus.reference_num)))
cloud(resp.time.rel ~ d + mbtcp.modbus.reference_num | resp.func.code, data = mergedSewDT[resp.func.code=="4"],
col.point = mergedDT$mbtcp.modbus.reference_num, pch= 19,
xlab = "d", ylab = "refNum", zlab = "resp.time.rel",
panel.aspect = 0.7,
main="3D Scatterplot \nReference Number, Data Value Over Time for Function Code 4",
key = list(points = list(pch = 19, col = seq_along(levels(mergedDT$mbtcp.modbus.reference_num))),
text = list(levels(mergedDT$mbtcp.modbus.reference_num)), space = 'top',
columns = nlevels(mergedDT$mbtcp.modbus.reference_num)))
cloud(resp.time.rel ~ d + mbtcp.modbus.reference_num | resp.func.code, data = mergedSewDT[resp.func.code=="4"],
col.point = mergedDT$mbtcp.modbus.reference_num, pch= 19,
xlab = "d", ylab = "refNum", zlab = "resp.time.rel",
panel.aspect = 0.7,
screen = list(x = -90, y = 70),
main="3D Scatterplot \nReference Number, Data Value Over Time for Function Code 4",
key = list(points = list(pch = 19, col = seq_along(levels(mergedDT$mbtcp.modbus.reference_num))),
text = list(levels(mergedDT$mbtcp.modbus.reference_num)), space = 'top',
columns = nlevels(mergedDT$mbtcp.modbus.reference_num)))
cloud(resp.time.rel ~ d + mbtcp.modbus.reference_num | resp.func.code, data = mergedSewDT[resp.func.code=="4"],
col.point = mergedDT$mbtcp.modbus.reference_num, pch= 19,
xlab = "d", ylab = "refNum", zlab = "resp.time.rel",
panel.aspect = 0.7,
screen = list(x = -90),
main="3D Scatterplot \nReference Number, Data Value Over Time for Function Code 4",
key = list(points = list(pch = 19, col = seq_along(levels(mergedDT$mbtcp.modbus.reference_num))),
text = list(levels(mergedDT$mbtcp.modbus.reference_num)), space = 'top',
columns = nlevels(mergedDT$mbtcp.modbus.reference_num)))
cloud(resp.time.rel ~ d + mbtcp.modbus.reference_num | resp.func.code, data = mergedSewDT[resp.func.code=="4"],
col.point = mergedDT$mbtcp.modbus.reference_num, pch= 19,
xlab = "d", ylab = "refNum", zlab = "resp.time.rel",
panel.aspect = 0.7,
screen = list(x = -75),
main="3D Scatterplot \nReference Number, Data Value Over Time for Function Code 4",
key = list(points = list(pch = 19, col = seq_along(levels(mergedDT$mbtcp.modbus.reference_num))),
text = list(levels(mergedDT$mbtcp.modbus.reference_num)), space = 'top',
columns = nlevels(mergedDT$mbtcp.modbus.reference_num)))
cloud(resp.time.rel ~ d + mbtcp.modbus.reference_num | resp.func.code, data = mergedSewDT[resp.func.code=="4"],
col.point = mergedDT$mbtcp.modbus.reference_num, pch= 19,
xlab = "d", ylab = "refNum", zlab = "resp.time.rel",
panel.aspect = 0.7,
screen = list(x = 25),
main="3D Scatterplot \nReference Number, Data Value Over Time for Function Code 4",
key = list(points = list(pch = 19, col = seq_along(levels(mergedDT$mbtcp.modbus.reference_num))),
text = list(levels(mergedDT$mbtcp.modbus.reference_num)), space = 'top',
columns = nlevels(mergedDT$mbtcp.modbus.reference_num)))
cloud(resp.time.rel ~ d + mbtcp.modbus.reference_num | resp.func.code, data = mergedSewDT[resp.func.code=="4"],
col.point = mergedDT$mbtcp.modbus.reference_num, pch= 19,
xlab = "d", ylab = "refNum", zlab = "resp.time.rel",
panel.aspect = 0.7,
screen = list(x = -25),
main="3D Scatterplot \nReference Number, Data Value Over Time for Function Code 4",
key = list(points = list(pch = 19, col = seq_along(levels(mergedDT$mbtcp.modbus.reference_num))),
text = list(levels(mergedDT$mbtcp.modbus.reference_num)), space = 'top',
columns = nlevels(mergedDT$mbtcp.modbus.reference_num)))
cloud(resp.time.rel ~ d + mbtcp.modbus.reference_num | resp.func.code, data = mergedSewDT[resp.func.code=="4"],
col.point = mergedDT$mbtcp.modbus.reference_num, pch= 19,
xlab = "d", ylab = "refNum", zlab = "resp.time.rel",
panel.aspect = 0.7,
screen = list(x = -90, y = 25),
main="3D Scatterplot \nReference Number, Data Value Over Time for Function Code 4",
key = list(points = list(pch = 19, col = seq_along(levels(mergedDT$mbtcp.modbus.reference_num))),
text = list(levels(mergedDT$mbtcp.modbus.reference_num)), space = 'top',
columns = nlevels(mergedDT$mbtcp.modbus.reference_num)))
cloud(resp.time.rel ~ d + mbtcp.modbus.reference_num | resp.func.code, data = mergedSewDT[resp.func.code=="4"],
col.point = mergedDT$mbtcp.modbus.reference_num, pch= 19,
xlab = "d", ylab = "refNum", zlab = "resp.time.rel",
panel.aspect = 0.7,
screen = list(x = -90, y = 45),
main="3D Scatterplot \nReference Number, Data Value Over Time for Function Code 4",
key = list(points = list(pch = 19, col = seq_along(levels(mergedDT$mbtcp.modbus.reference_num))),
text = list(levels(mergedDT$mbtcp.modbus.reference_num)), space = 'top',
columns = nlevels(mergedDT$mbtcp.modbus.reference_num)))
cloud(resp.time.rel ~ d + mbtcp.modbus.reference_num | resp.func.code, data = mergedSewDT[resp.func.code=="4"],
col.point = mergedDT$mbtcp.modbus.reference_num, pch= 19,
xlab = "d", ylab = "refNum", zlab = "resp.time.rel",
panel.aspect = 0.7,
screen = list(x = -90, y = 65),
main="3D Scatterplot \nReference Number, Data Value Over Time for Function Code 4",
key = list(points = list(pch = 19, col = seq_along(levels(mergedDT$mbtcp.modbus.reference_num))),
text = list(levels(mergedDT$mbtcp.modbus.reference_num)), space = 'top',
columns = nlevels(mergedDT$mbtcp.modbus.reference_num)))
cloud(resp.time.rel ~ d + mbtcp.modbus.reference_num | resp.func.code, data = mergedSewDT[resp.func.code=="4"],
col.point = mergedDT$mbtcp.modbus.reference_num, pch= 19,
xlab = "d", ylab = "refNum", zlab = "resp.time.rel",
panel.aspect = 0.7,
screen = list(x = -110, y = 45),
main="3D Scatterplot \nReference Number, Data Value Over Time for Function Code 4",
key = list(points = list(pch = 19, col = seq_along(levels(mergedDT$mbtcp.modbus.reference_num))),
text = list(levels(mergedDT$mbtcp.modbus.reference_num)), space = 'top',
columns = nlevels(mergedDT$mbtcp.modbus.reference_num)))
cloud(resp.time.rel ~ d + mbtcp.modbus.reference_num | resp.func.code, data = mergedSewDT[resp.func.code=="4"],
col.point = mergedDT$mbtcp.modbus.reference_num, pch= 19,
xlab = "d", ylab = "refNum", zlab = "resp.time.rel",
panel.aspect = 0.7,
screen = list(z = 25),
main="3D Scatterplot \nReference Number, Data Value Over Time for Function Code 4",
key = list(points = list(pch = 19, col = seq_along(levels(mergedDT$mbtcp.modbus.reference_num))),
text = list(levels(mergedDT$mbtcp.modbus.reference_num)), space = 'top',
columns = nlevels(mergedDT$mbtcp.modbus.reference_num)))
cloud(resp.time.rel ~ d + mbtcp.modbus.reference_num | resp.func.code, data = mergedSewDT[resp.func.code=="4"],
col.point = mergedDT$mbtcp.modbus.reference_num, pch= 19,
xlab = "d", ylab = "refNum", zlab = "resp.time.rel",
panel.aspect = 0.7,
screen = list(z = -25),
main="3D Scatterplot \nReference Number, Data Value Over Time for Function Code 4",
key = list(points = list(pch = 19, col = seq_along(levels(mergedDT$mbtcp.modbus.reference_num))),
text = list(levels(mergedDT$mbtcp.modbus.reference_num)), space = 'top',
columns = nlevels(mergedDT$mbtcp.modbus.reference_num)))
cloud(resp.time.rel ~ d + mbtcp.modbus.reference_num | resp.func.code, data = mergedSewDT[resp.func.code=="4"],
col.point = mergedDT$mbtcp.modbus.reference_num, pch= 19,
xlab = "d", ylab = "refNum", zlab = "resp.time.rel",
panel.aspect = 0.7,
screen = list(z = 25),
main="3D Scatterplot \nReference Number, Data Value Over Time for Function Code 4",
key = list(points = list(pch = 19, col = seq_along(levels(mergedDT$mbtcp.modbus.reference_num))),
text = list(levels(mergedDT$mbtcp.modbus.reference_num)), space = 'top',
columns = nlevels(mergedDT$mbtcp.modbus.reference_num)))
cloud(resp.time.rel ~ d + mbtcp.modbus.reference_num | resp.func.code, data = mergedSewDT[resp.func.code=="4"],
col.point = mergedDT$mbtcp.modbus.reference_num, pch= 19,
xlab = "d", ylab = "refNum", zlab = "resp.time.rel",
panel.aspect = 0.7,
screen = list(z = 55),
main="3D Scatterplot \nReference Number, Data Value Over Time for Function Code 4",
key = list(points = list(pch = 19, col = seq_along(levels(mergedDT$mbtcp.modbus.reference_num))),
text = list(levels(mergedDT$mbtcp.modbus.reference_num)), space = 'top',
columns = nlevels(mergedDT$mbtcp.modbus.reference_num)))
cloud(resp.time.rel ~ d + mbtcp.modbus.reference_num | resp.func.code, data = mergedSewDT[resp.func.code=="4"],
col.point = mergedDT$mbtcp.modbus.reference_num, pch= 19,
xlab = "d", ylab = "refNum", zlab = "resp.time.rel",
panel.aspect = 0.7,
screen = list(x = 55),
main="3D Scatterplot \nReference Number, Data Value Over Time for Function Code 4",
key = list(points = list(pch = 19, col = seq_along(levels(mergedDT$mbtcp.modbus.reference_num))),
text = list(levels(mergedDT$mbtcp.modbus.reference_num)), space = 'top',
columns = nlevels(mergedDT$mbtcp.modbus.reference_num)))
cloud(resp.time.rel ~ d + mbtcp.modbus.reference_num | resp.func.code, data = mergedSewDT[resp.func.code=="4"],
col.point = mergedDT$mbtcp.modbus.reference_num, pch= 19,
xlab = "d", ylab = "refNum", zlab = "resp.time.rel",
panel.aspect = 0.7,
screen = list(x = 25),
main="3D Scatterplot \nReference Number, Data Value Over Time for Function Code 4",
key = list(points = list(pch = 19, col = seq_along(levels(mergedDT$mbtcp.modbus.reference_num))),
text = list(levels(mergedDT$mbtcp.modbus.reference_num)), space = 'top',
columns = nlevels(mergedDT$mbtcp.modbus.reference_num)))
cloud(resp.time.rel ~ d + mbtcp.modbus.reference_num | resp.func.code, data = mergedSewDT[resp.func.code=="4"],
col.point = mergedDT$mbtcp.modbus.reference_num, pch= 19,
xlab = "d", ylab = "refNum", zlab = "resp.time.rel",
panel.aspect = 0.7,
screen = list(x = 0, y = 0, z = 0),
main="3D Scatterplot \nReference Number, Data Value Over Time for Function Code 4",
key = list(points = list(pch = 19, col = seq_along(levels(mergedDT$mbtcp.modbus.reference_num))),
text = list(levels(mergedDT$mbtcp.modbus.reference_num)), space = 'top',
columns = nlevels(mergedDT$mbtcp.modbus.reference_num)))
cloud(resp.time.rel ~ d + mbtcp.modbus.reference_num | resp.func.code, data = mergedSewDT[resp.func.code=="4"],
col.point = mergedDT$mbtcp.modbus.reference_num, pch= 19,
xlab = "d", ylab = "refNum", zlab = "resp.time.rel",
panel.aspect = 0.7,
screen = list(x = 45, y = 0, z = 0),
main="3D Scatterplot \nReference Number, Data Value Over Time for Function Code 4",
key = list(points = list(pch = 19, col = seq_along(levels(mergedDT$mbtcp.modbus.reference_num))),
text = list(levels(mergedDT$mbtcp.modbus.reference_num)), space = 'top',
columns = nlevels(mergedDT$mbtcp.modbus.reference_num)))
cloud(resp.time.rel ~ d + mbtcp.modbus.reference_num | resp.func.code, data = mergedSewDT[resp.func.code=="4"],
col.point = mergedDT$mbtcp.modbus.reference_num, pch= 19,
xlab = "d", ylab = "refNum", zlab = "resp.time.rel",
panel.aspect = 0.7,
screen = list(x = -45, y = 0, z = 0),
main="3D Scatterplot \nReference Number, Data Value Over Time for Function Code 4",
key = list(points = list(pch = 19, col = seq_along(levels(mergedDT$mbtcp.modbus.reference_num))),
text = list(levels(mergedDT$mbtcp.modbus.reference_num)), space = 'top',
columns = nlevels(mergedDT$mbtcp.modbus.reference_num)))
nn <- neuralnet(
anomaly ~ frame.time_delta_displayed +
mbtcp.modbus.reference_num + mbtcp.modbus.word_cnt +
resp.mbcp.len + resp.data, data=train, hidden=1,
err.fct="ce", linear.output=FALSE)
nn$result.matrix
plot(nn)
View(moddataDT)
